{"remainingRequest":"/home/ignat/Документи/GitHub/vue-shelf/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/ignat/Документи/GitHub/vue-shelf/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ignat/Документи/GitHub/vue-shelf/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ignat/Документи/GitHub/vue-shelf/src/views/Register.vue?vue&type=template&id=63ae9146&scoped=true&","dependencies":[{"path":"/home/ignat/Документи/GitHub/vue-shelf/src/views/Register.vue","mtime":1632400489380},{"path":"/home/ignat/Документи/GitHub/vue-shelf/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ignat/Документи/GitHub/vue-shelf/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/ignat/Документи/GitHub/vue-shelf/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ignat/Документи/GitHub/vue-shelf/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5MYW5ndWFnZQogICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIndyYXBwZXIiIH0sIFsKICAgICAgICBfdm0uX20oMCksCiAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmxvZ2luLAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImxvZ2luIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ1c2VyLWlucHV0IiwKICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogInRleHQiLCBwbGFjZWhvbGRlcjogItCb0L7Qs9GW0L0iIH0sCiAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ubG9naW4gfSwKICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBfdm0ubG9naW4gPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnBhc3N3b3JkLAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInBhc3N3b3JkIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogInBhc3N3b3JkIiwgcGxhY2Vob2xkZXI6ICLQn9Cw0YDQvtC70YwiIH0sCiAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ucGFzc3dvcmQgfSwKICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBfdm0ucGFzc3dvcmQgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm15QnV0dG9uIiwgb246IHsgY2xpY2s6IF92bS5zZXRSZWdpc3RlciB9IH0sCiAgICAgICAgICAgIFtfdm0uX3YoItCg0LXRlNGB0YLRgNCw0YbRltGPIildCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSkKICAgIDogX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ3cmFwcGVyIiB9LCBbCiAgICAgICAgX3ZtLl9tKDEpLAogICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgdmFsdWU6IF92bS5sb2dpbiwKICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJsb2dpbiIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidXNlci1pbnB1dCIsCiAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJ0ZXh0IiwgcGxhY2Vob2xkZXI6ICJMb2dpbiIgfSwKICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5sb2dpbiB9LAogICAgICAgICAgICBvbjogewogICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF92bS5sb2dpbiA9ICRldmVudC50YXJnZXQudmFsdWUKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLAogICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ucGFzc3dvcmQsCiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAicGFzc3dvcmQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICBhdHRyczogeyB0eXBlOiAicGFzc3dvcmQiLCBwbGFjZWhvbGRlcjogIlBhc3N3b3JkIiB9LAogICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLnBhc3N3b3JkIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX3ZtLnBhc3N3b3JkID0gJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJteUJ1dHRvbiIsIG9uOiB7IGNsaWNrOiBfdm0uc2V0UmVnaXN0ZXIgfSB9LAogICAgICAgICAgICBbX3ZtLl92KCJSZWdpc3RyYXRpb24iKV0KICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImhlYWRlciIgfSwgWwogICAgICBfYygiaDMiLCB7IHN0YXRpY0NsYXNzOiAic2lnbi1pbiIsIHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAiIzAwOGM4YyIgfSB9LCBbCiAgICAgICAgX3ZtLl92KCLQoNC10ZTRgdGC0YDQsNGG0ZbRjyIpCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImhlYWRlciIgfSwgWwogICAgICBfYygiaDMiLCB7IHN0YXRpY0NsYXNzOiAic2lnbi1pbiIsIHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAiIzAwOGM4YyIgfSB9LCBbCiAgICAgICAgX3ZtLl92KCJSZWdpc3RyYXRpb24iKQogICAgICBdKQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}