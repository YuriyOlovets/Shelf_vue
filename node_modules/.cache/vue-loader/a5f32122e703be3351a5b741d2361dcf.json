{"remainingRequest":"/home/ignat/Документи/GitHub/vue-shelf/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/ignat/Документи/GitHub/vue-shelf/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ignat/Документи/GitHub/vue-shelf/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ignat/Документи/GitHub/vue-shelf/src/components/Cells.vue?vue&type=template&id=50fc7ed1&scoped=true&","dependencies":[{"path":"/home/ignat/Документи/GitHub/vue-shelf/src/components/Cells.vue","mtime":1632400655470},{"path":"/home/ignat/Документи/GitHub/vue-shelf/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ignat/Документи/GitHub/vue-shelf/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/ignat/Документи/GitHub/vue-shelf/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ignat/Документи/GitHub/vue-shelf/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5MYW5ndWFnZQogICAgPyBfYygKICAgICAgICAidGFibGUiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJzdHlsZWQtdGFibGUiIH0sCiAgICAgICAgWwogICAgICAgICAgX3ZtLl9tKDApLAogICAgICAgICAgX3ZtLl9sKF92bS5DZWxscywgZnVuY3Rpb24oY2VsbCkgewogICAgICAgICAgICByZXR1cm4gX2MoInRib2R5IiwgeyBrZXk6IGNlbGwuaWQgfSwgWwogICAgICAgICAgICAgIF9jKCJ0ciIsIHsgc3RhdGljQ2xhc3M6ICJhY3RpdmUtcm93IiB9LCBbCiAgICAgICAgICAgICAgICBfYygidGQiLCBbX3ZtLl92KF92bS5fcyhjZWxsLmNlbGxfbnVtYmVyKSldKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmdvUHJvZHVjdCgKICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsLmNlbGxfZGVzY3JpcHRpb24ucHJvZHVjdF9uYW1lX2VuCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygidGQiLCBbCiAgICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInBob3RvIiwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM6IGNlbGwuY2VsbF9kZXNjcmlwdGlvbi5wcm9kdWN0X2ltYWdlLAogICAgICAgICAgICAgICAgICAgICAgICAgIGFsdDogIiIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoInRkIiwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKGNlbGwuY2VsbF9kZXNjcmlwdGlvbi5wcm9kdWN0X25hbWUpKSwKICAgICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm15QnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAicmVsYXRpdmUiLAogICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAiNTAlIiwKICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAidHJhbnNsYXRlKC01MCUsIDApIgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmdvQ2hhbmdlKGNlbGwucGFyZW50X3NoZWxmLCBjZWxsLmlkKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCLQl9C80ZbQvdC40YLQuCIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJ0ZCIsIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhjZWxsLndlaWdodCkgKyAi0LMiKSwKICAgICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm15QnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAicmVsYXRpdmUiLAogICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAiNTAlIiwKICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAidHJhbnNsYXRlKC01MCUsIDApIgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmdvSGlzdG9yeSgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwuaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsLmNlbGxfZGVzY3JpcHRpb24ucHJvZHVjdF9uYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCLQhtGB0YLQvtGAadGPIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSkKICAgICAgICAgIH0pCiAgICAgICAgXSwKICAgICAgICAyCiAgICAgICkKICAgIDogX2MoCiAgICAgICAgInRhYmxlIiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAic3R5bGVkLXRhYmxlIiB9LAogICAgICAgIFsKICAgICAgICAgIF92bS5fbSgxKSwKICAgICAgICAgIF92bS5fbChfdm0uQ2VsbHMsIGZ1bmN0aW9uKGNlbGwpIHsKICAgICAgICAgICAgcmV0dXJuIF9jKCJ0Ym9keSIsIHsga2V5OiBjZWxsLmlkIH0sIFsKICAgICAgICAgICAgICBfYygidHIiLCB7IHN0YXRpY0NsYXNzOiAiYWN0aXZlLXJvdyIgfSwgWwogICAgICAgICAgICAgICAgX2MoInRkIiwgW192bS5fdihfdm0uX3MoY2VsbC5jZWxsX251bWJlcikpXSksCiAgICAgICAgICAgICAgICBfYygidGQiLCBbCiAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJwaG90byIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiBjZWxsLmNlbGxfZGVzY3JpcHRpb24ucHJvZHVjdF9pbWFnZSwgYWx0OiAiIiB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJ0ZCIsIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhjZWxsLmNlbGxfZGVzY3JpcHRpb24ucHJvZHVjdF9uYW1lX2VuKSksCiAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJteUJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogInJlbGF0aXZlIiwKICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogIjUwJSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogInRyYW5zbGF0ZSgtNTAlLCAwKSIKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5nb0NoYW5nZShjZWxsLnBhcmVudF9zaGVsZiwgY2VsbC5pZCkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiQ2hhbmdlIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoInRkIiwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKGNlbGwud2VpZ2h0KSArICLQsyIpLAogICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXlCdXR0b24iLAogICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICJyZWxhdGl2ZSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6ICI1MCUiLAogICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06ICJ0cmFuc2xhdGUoLTUwJSwgMCkiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZ29IaXN0b3J5KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbC5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwuY2VsbF9kZXNjcmlwdGlvbi5wcm9kdWN0X25hbWVfZW4KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkhpc3RvcnkiKV0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKQogICAgICAgICAgfSkKICAgICAgICBdLAogICAgICAgIDIKICAgICAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygidGhlYWQiLCBbCiAgICAgIF9jKCJ0ciIsIFsKICAgICAgICBfYygidGgiLCB7IHN0YXRpY1N0eWxlOiB7ICJtYXgtd2lkdGgiOiAiMTVweCIgfSB9LCBbX3ZtLl92KCJpZCIpXSksCiAgICAgICAgX2MoInRoIiksCiAgICAgICAgX2MoInRoIiwgW192bS5fdigi0J/RgNC+0LTRg9C60YIiKV0pLAogICAgICAgIF9jKCJ0aCIsIFtfdm0uX3YoItCS0LDQs9CwIildKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoInRoZWFkIiwgWwogICAgICBfYygidHIiLCBbCiAgICAgICAgX2MoInRoIiwgeyBzdGF0aWNTdHlsZTogeyAibWF4LXdpZHRoIjogIjE1cHgiIH0gfSwgW192bS5fdigiaWQiKV0pLAogICAgICAgIF9jKCJ0aCIpLAogICAgICAgIF9jKCJ0aCIsIFtfdm0uX3YoIlByb2R1Y3QiKV0pLAogICAgICAgIF9jKCJ0aCIsIFtfdm0uX3YoIldlaWdodCIpXSkKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}